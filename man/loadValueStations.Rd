% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadValueStations.R
\name{loadValueStations}
\alias{loadValueStations}
\title{Load VALUE station data}
\usage{
loadValueStations(dataset, var, stationID = NULL, lonLim = NULL,
  latLim = NULL, season = NULL, years = NULL, tz = "")
}
\arguments{
\item{dataset}{A character string indicating the database to be accessed. This is usually a path to a local file or a URL 
pointing to a standard ASCII file (.txt) or a .zip file containing station or predictions data.}

\item{var}{Variable code (character string).}

\item{stationID}{Optional. A character vector indicating the code names of the stations to be loaded.}

\item{lonLim}{Vector of length = 2, with minimum and maximum longitude coordinates, in decimal degrees, of the bounding box selected.
For single-point queries, a numeric value with the longitude coordinate. If \code{NULL} (default), the whole longitudinal range
 is selected (Note that this may lead to a large output object size).}

\item{latLim}{Same as \code{lonLim}, but for the selection of the latitudinal range.}

\item{season}{An integer vector specifying the desired season (in months, January = 1 ..., December = 12).
Options include one to several (contiguous) months. Default to \code{NULL}, indicating a full year selection (same as \code{season = 1:12}).}

\item{years}{Optional vector of years to select. Default (\code{NULL}) to all available years. If the requested variable is static (e.g. orography)
it will be ignored.}

\item{tz}{A time zone specification to be used for the conversion of dates, if one is required
(i.e., if the time zone of the dataset does not correspond to the system-specific one; see
\code{\link[base]{timezones}} for details). Default to unspecified (i.e. \code{tz = ""}).}
}
\value{
a list with the following elements:
\itemize{
\item \code{Variable}. Name of the variable
\item \code{Data}. A 2-D matrix containing the data. Dates are ordered by rows and Stations by columns, 
following the order indicated in the \code{Metadata}.
\item \code{xyCoords}. A 2-D matrix with longitude and latitudes of the stations
\item \code{Dates}. A list with the verification time interval of each record in the time series.
 This is represented by a list with two elements: \code{start} and \code{end}, representing the
 lower and upper bounds of the verification period
\item \code{Metadata}. A list of variable length depending on the available metadata associated
to each observation. If no metadata are provided, at least the station codes (compulsory) are displayed.
}
}
\description{
Load observations data from station datasets in the standard VALUE ASCII format (See reference URL).
}
\note{
Unlike gridded datasets, station data do not use a dictionary for variable homogenization. Thus, users
must take care of variable units and eventual conversions when necessary.
}
\section{Geolocation parameters}{
 Regarding the selection of the spatial domain,
 it is possible to select the whole spatial domain of a dataset by defining the arguments \code{lonLim=NULL}
 and \code{latLim=NULL}. Arbitrary rectangular domains are defined by the minimum and maximum coordinates
 in longitude and latitude (for instance \code{lonLim=c(-10,10)} and \code{latLim=c(35,45)} indicates a
 rectangular window centered in the Iberian Peninsula), and single grid-cell values
 (for instance \code{lonLim=-3.21} and \code{latLim=41.087} for retrieving the data in the closest grid
 point to the point coordinate -3.21E, 41.087N. In the last two cases, the function
 operates by finding the nearest (euclidean distance) grid-points to the coordinates introduced.
 
 In the case of station data (\code{\link{loadValueStations}}), the logic is the same, taking into account that in the case
 of rectangular domains, all stations falling inside that window will be loaded. For single-point selections,
 the closest station will be chosen, and a note on-screen will inform about the distance from the selected point
 to the chosen station.
}
\examples{
\dontrun{
obs.dataset <- file.path(find.package("R.VALUE"), "VALUE_ECA_86_v1.zip")
# All data
obs <- loadValueStations(dataset = obs.dataset, var = "tmean")
# Selection by lon-lat
obs1 <- loadValueStations(dataset = obs.dataset, var = "tmax", lonLim = -3, latLim = 42)
obs1$Metadata
# Selection by station code
obs2 <- loadValueStations(dataset = obs.dataset, var = "tmax", stationID = "000232")
obs2$Metadata
# Several stations within a rectangular domain
obs3 <- loadValueStations(obs.dataset, "precip", lonLim = c(-5, 2), latLim = c(38, 43))
obs3$Metadata
# Winter data for 1991-2000
djf <- loadValueStations(dataset = obs.dataset, var = "tmin", season = c(12, 1, 2),
 years = 1991:2000)
# Note that winter 1991 encompasses Dec 1990 + Jan 1991 + Feb 1991 (year-crossing season)
}
}
\author{
J. Bedia
}
\references{
VALUE's standard ASCII format reference: 
\url{http://meteo.unican.es/work/loadeR/wiki/Rmd_html/OformatStationData.html} 
\url{http://stackoverflow.com/questions/12460938/r-reading-in-a-zip-data-file-without-unzipping-it}
}
\seealso{
Other loading: \code{\link{loadValuePredictions}}
}

