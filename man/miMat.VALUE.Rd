% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miMat.VALUE.R
\name{miMat.VALUE}
\alias{miMat.VALUE}
\title{Mutual Information Matrix}
\usage{
miMat.VALUE(stationObj, predictionObj = NULL, season = c("annual", "DJF",
  "MAM", "JJA", "SON"), aggr.type = c("after", "before"), prob = NULL,
  threshold = 1, max.na.prop = 0.25)
}
\arguments{
\item{stationObj}{An R-VALUE object containing station data (as returned by \code{\link{loadValueStations}}).}

\item{predictionObj}{A R-VALUE predictions object as loaded by \code{\link{loadValuePredictions}}.
Default to NULL, meaning that the matrix of joint probabilities is done on the observations.}

\item{season}{Character string indicating the target season. Accepted values are 
\code{c("annual", "DJF", "MAM", "JJA", "SON")}}

\item{aggr.type}{Type of aggregation in the case of multiple realizations. Should the aggregation of 
multiple members be performed \code{"after"} (the default) or \code{"before"} computing the joint probabilities?. Ignored
 in the case of observations and deterministic predictions.}

\item{prob}{Default to NULL (unused). Otherwise, a float number in the range (0,1) defining the quantile threshold to be calculated.
If \code{prob} is used, the joint exceedance probabilities will be calculated (i.e., the probability of an occurrence above the \code{prob} percentile
in location A given the same exceedance in location B...).}

\item{threshold}{Threshold above which values are used/discarded
(i.e., values greater or equal than \code{threshold} are considered as Wet). Default to 1 (assuming mm)}

\item{max.na.prop}{Maximum allowed proportion of missing data (Default to 0.25). See details}
}
\value{
A list of 2D matrices. The length of the list corresponds to the periods indicated in the \code{season} 
argument (default to 5, annual and the four standard WMO seasons). Attributes indicate the station names 
(in the row/column order they appear), and their geographical coordinates.
}
\description{
Computes the mutual information between stations regarding different aspects of precipitation
}
\details{
The typical way to analyze dependencies is comparing the joint $P(wet_{i},wet_{j})$ (i.e. \code{output="jointProb"})
and the product of marginals $P(wet_{i}) * P(wet_{j})$. The difference is zero only in case that
$wet_i$ and $wet_j$ are independent and the larger the value, the more dependent they are.
 Using the joint probability alone would make comparisons a bit difficult since the final result would be
a combination of the dependency between both wet series and the marginal probabilities
in each of the stations (e.g. the joint for web values would be smaller in dry climates),
so the analysis of dependencies will be modulated by the different climatologies.
In order to avoid this, the mutual information of 
two random variables is a measure of the mutual dependence between the two variables.
MI = 0 if the two events are independent.

 MI is more general and determines how similar the joint distribution p(X,Y) is to the products
  of factored marginal distribution p(X)p(Y). Mutual information is nonnegative (i.e. \emph{MI(X,Y) >= 0}) 
  and symmetric (i.e. \emph{MI(X,Y) = MI(Y,X)}).
Note that when the joint probability is zero the returned value of MI is NaN.
}
\examples{
\dontrun{
obs.file <- file.path(find.package("R.VALUE"), "example_datasets", "VALUE_53_ECAD_Germany_v1.zip")
stationObj <- loadValueStations(obs.file, var = "precip")
# Mutual information (By default, computes the
# joint probabilities for each pair of stations for Dry-Dry, Dry-Wet,
# Wet-Wet and Wet-Dry), and applies the MI formula (See References)

mi.matrix <- miMat.VALUE(stationObj,
                  predictionObj = NULL,
                  season = "annual",
                  threshold = 1,
                  max.na.prop = 1)
                         
# Draw matrix - requires lattice!
station.labels <- attr(mi.matrix[[1]], "station_names")
scales.list <- list(x = list(labels = station.labels, rot = 90,
                           at = seq(1,ncol(mi.matrix[[1]]),1), cex = .5),
                    y = list(labels = station.labels,
                             at = seq(1,ncol(mi.matrix[[1]]),1), cex = .5))
# requires lattice package
# lattice::levelplot(mi.matrix[[1]], ylab = "", xlab = "",
                     main = "Mutual Information Matrix", scales = scales.list)

# If 'prob' is given, then the same as before, but considering
# threshold exceedances rather that occurrence. Example using the threshold exceedance p90:

mi.matrix.p90 <- miMat.VALUE(stationObj,
                             predictionObj = NULL,
                             season = "annual",
                             threshold = 1,
                             max.na.prop = 1,
                             prob = .9)
                             
# requires lattice package
# lattice::levelplot(mi.matrix.p90[[1]], ylab = "", xlab = "",
                     main = "Mutual Information Matrix", scales = scales.list)
}
}
\author{
J. Bedia
}
\references{
\url{https://en.wikipedia.org/wiki/Mutual_information}
}

